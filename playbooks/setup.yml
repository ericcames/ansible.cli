---
- name: Setting up the Ansible Automation Platform install
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    keys:
      - name: ansible-svc
        key: ./files/public_keys/ansible-svc
    users:
      - name: ansible-svc
        sudoers_account: true
        user_comment: Service Account
        # user_password: vaulted
        user_home: /home/ansible-svc

  vars_files:
    - ./files/distributions.yml
    - ./files/vault.yml

  vars_prompt:
    - name: controller_url
      prompt: What is your server's fully qualified domain name?
      private: false

    - name: aap_distro
      prompt: "Which Ansible Automation Platform (AAP) distro to use 2.4 or 2.5 or 2.4containerized or 2.5containerized? default: 2.5containerized"
      private: false
      default: "2.5containerized"

  tasks:

    - name: Get diskspace
      register: diskspace
      changed_when: false
      ansible.builtin.command:
        cmd: lsblk -f

    - name: Get our distribution info
      loop: "{{ distributions }}"
      when: item['name'] == aap_distro
      ansible.builtin.set_fact:
        checksum: "{{ item['aap_sha_value'] }}"
        rh_distro: "{{ item['rh_distro'] }}"
        architecture: "{{ item['architecture'] }}"
        bundle: "{{ item['bundle'] }}"

    - name: Print out system checks
      ansible.builtin.debug:
        msg:
          - "Our stand alone controller_url: {{ controller_url }}"
          - "Total system memory: {{ ansible_memtotal_mb }} mb"
          - "Total cpu count: {{ ansible_processor_vcpus }}"
          - "Red Hat Enterprise Linux: {{ ansible_distribution }} {{ ansible_facts['distribution_version'] }} {{ ansible_facts['userspace_architecture'] }}"
          - Diskspace
          - "{{ diskspace['stdout_lines'] }}"
          - "We are installing {{ aap_distro }} AAP bundle is {{ bundle }} the checksum is {{ checksum }}"

    - name: Check in with user
      ansible.builtin.pause:
        prompt: Please confirm that it is safe to proceed. Press return to continue. Press Ctrl+c and then "a" to abort

    - name: Ensure we have a access token the Red Hat Customer portal
      register: access_token
      until: access_token is not failed
      retries: 1
      delay: 20
      ansible.builtin.uri:
        url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
        method: POST
        body_format: form-urlencoded
        return_content: true
        body:
          grant_type: refresh_token
          client_id: rhsm-api
          refresh_token: "{{ offline_token }}"

    - name: Preparing for a Legacy 2.4 install
      when: aap_distro == "2.4"
      block:

        - name: Ensure we have the 2.4 RPM AAP bundle
          register: download_aap_tarball
          until: download_aap_tarball is not failed
          retries: 5
          delay: 20
          ansible.builtin.get_url:
            url: https://api.access.redhat.com/management/v1/images/{{ checksum }}/download
            headers:
              accept: application/json
              Authorization: Bearer {{ access_token.json.access_token }}
            dest: ~/aap24.tar.gz
            checksum: "sha256: {{ checksum }}"
            group: root
            owner: root
            mode: '0644'

        - name: Checking to see if we have already opened the 2.4 bundle
          register: my_test
          ansible.builtin.stat:
            path: ~/aap24_was_opened

        - name: Ensure the 2.4 RPM aap bundle is opened up
          when: my_test.stat.exists == false
          ansible.builtin.unarchive:
            src: ~/aap24.tar.gz
            dest: ~/
            remote_src: true

        - name: Create a file to let us know if we have already opened up the 2.4 aap bundle
          when: my_test.stat.exists == false
          ansible.builtin.copy:
            content: ""
            dest: ~/aap24_was_opened
            owner: root
            group: root
            mode: 0444

        - name: Ensure we have the RPM AAP 2.4 bundle directory
          register: aap_bundle_dir
          changed_when: false
          ansible.builtin.shell: ls -d ansible-automation-platform-setup-bundle-2.4-* | grep -v tar.gz
          args:
            chdir: ~/

        - name: Make copy of the 2.4 RPM bundle to original name
          changed_when: false
          ansible.builtin.command: "cp aap24.tar.gz {{ aap_bundle_dir.stdout }}.tar.gz"
          args:
            chdir: ~/

        - name: Creating the new 2.4 inventory file
          ansible.builtin.template:
            src: legacy_aap_inventory_controller_file.j2
            dest: "~/{{ aap_bundle_dir.stdout }}/inventory"
            owner: root
            group: root
            mode: "0644"
            backup: true

        - name: Copy the vault file into place for the 2.4 install
          ansible.builtin.copy:
            src: vault.yml
            dest: "~/{{ aap_bundle_dir.stdout }}/vault.yml"
            owner: root
            group: root
            mode: "0644"
            decrypt: false


    - name: Preparing for a Legacy 2.5 install
      when: aap_distro == "2.5"
      block:

        - name: Ensure we have the 2.5 RPM AAP bundle
          register: download_aap_tarball
          until: download_aap_tarball is not failed
          retries: 5
          delay: 20
          ansible.builtin.get_url:
            url: https://api.access.redhat.com/management/v1/images/{{ checksum }}/download
            headers:
              accept: application/json
              Authorization: Bearer {{ access_token.json.access_token }}
            dest: ~/aap25.tar.gz
            checksum: "sha256: {{ checksum }}"
            group: root
            owner: root
            mode: '0644'

        - name: Checking to see if we have already opened the 2.5 bundle
          register: my_test
          ansible.builtin.stat:
            path: ~/aap25_was_opened

        - name: Ensure the 2.5 RPM aap bundle is opened up
          when: my_test.stat.exists == false
          ansible.builtin.unarchive:
            src: ~/aap25.tar.gz
            dest: ~/
            remote_src: true

        - name: Create a file to let us know if we have already opened up the 2.5 aap bundle
          when: my_test.stat.exists == false
          ansible.builtin.copy:
            content: ""
            dest: ~/aap25_was_opened
            owner: root
            group: root
            mode: 0444

        - name: Ensure we have the RPM AAP 2.5 bundle directory
          register: aap_bundle_dir
          changed_when: false
          ansible.builtin.shell: ls -d ansible-automation-platform-setup-bundle-2.5-* | grep -v tar.gz
          args:
            chdir: ~/

        - name: Make copy of the 2.5 RPM bundle to original name
          changed_when: false
          ansible.builtin.command: "cp aap25.tar.gz {{ aap_bundle_dir.stdout }}.tar.gz"
          args:
            chdir: ~/

        - name: Creating the new 2.5 inventory file
          ansible.builtin.template:
            src: legacy_aap_inventory_controller_file.j2
            dest: "~/{{ aap_bundle_dir.stdout }}/inventory"
            owner: root
            group: root
            mode: "0644"
            backup: true

        - name: Copy the vault file into place for the 2.5 install
          ansible.builtin.copy:
            src: vault.yml
            dest: "~/{{ aap_bundle_dir.stdout }}/vault.yml"
            owner: root
            group: root
            mode: "0644"
            decrypt: false

    - name: Preparing for a containerized install
      when: aap_distro == "2.4containerized" or
            aap_distro == "2.5containerized"
      block:

        - name: Ensure users are created
          loop: "{{ users }}"
          no_log: true
          ansible.builtin.user:
            name: "{{ item['name'] }}"
            password: "{{ user_password | password_hash('sha512') }}"
            update_password: on_create
            comment: "{{ item['user_comment'] }}"
            home: "{{ item['user_home'] }}"

        - name: Create sudoers in sudoers.d directory
          loop: "{{ users }}"
          when: item['sudoers_account'] is true
          no_log: true
          ansible.builtin.copy:
            dest: /etc/sudoers.d/{{ item['name'] }}
            content: "{{ item['name'] }} ALL=(ALL) NOPASSWD: ALL\n"
            owner: root
            group: root
            mode: ug+rwX,o=

        - name: Making sure the public keys are in place
          loop: "{{ keys }}"
          ansible.posix.authorized_key:
            user: "{{ item['name'] }}"
            state: present
            key: "{{ lookup('file', item['key']) }}"

    - name: Preparing for a containerized 2.4 install
      when:
        - aap_distro == '2.4containerized'
        - bundle is False
      block:

        - name: Ensure we have the 2.4 containerized AAP software
          register: download_aap_tarball
          until: download_aap_tarball is not failed
          retries: 5
          delay: 20
          ansible.builtin.get_url:
            url: https://api.access.redhat.com/management/v1/images/{{ checksum }}/download
            headers:
              accept: application/json
              Authorization: Bearer {{ access_token.json.access_token }}
            dest: ~ansible-svc/aap24c.tar.gz
            checksum: "sha256: {{ checksum }}"
            owner: ansible-svc
            group: ansible-svc
            mode: '0644'

        - name: Checking to see if we have already opened the 2.4 bundle
          register: my_test
          ansible.builtin.stat:
            path: ~ansible-svc/aap24c_was_opened

        - name: Ensure the containerized 2.4 aap bundle is opened up
          when: my_test.stat.exists is undefined
          ansible.builtin.unarchive:
            src: ~ansible-svc/aap24c.tar.gz
            dest: ~ansible-svc/
            remote_src: true
            owner: ansible-svc
            group: ansible-svc

        - name: Create a file to let us know if we have already opened up the containerized 2.4 aap bundle
          when: my_test.stat.exists is undefined
          ansible.builtin.copy:
            content: ""
            dest: ~ansible-svc/aap24c_was_opened
            owner: ansible-svc
            group: ansible-svc
            mode: '0444'

        - name: Ensure we have the containerized AAP 2.4 software directory
          register: aap_bundle_dir
          changed_when: false
          ansible.builtin.shell:
            cmd: |
              set -o pipefail
              ls -d ansible-automation-platform-containerized-setup-2.4-* | grep -v tar.gz
          args:
            chdir: ~ansible-svc/

        - name: Making copy of the containerized file to the original name
          changed_when: false
          ansible.builtin.command: "cp aap24c.tar.gz {{ aap_bundle_dir.stdout }}.tar.gz"
          args:
            chdir: ~ansible-svc/

        - name: Creating the new inventory file for 2.4 containerized
          ansible.builtin.template:
            src: containerized_aap_24_inventory_controller_file.j2
            dest: "~ansible-svc/{{ aap_bundle_dir.stdout }}/inventory-growth"
            owner: ansible-svc
            group: ansible-svc
            mode: "0644"
            backup: true

        - name: Copy the vault file into place for the install
          ansible.builtin.copy:
            src: vault.yml
            dest: "~ansible-svc/{{ aap_bundle_dir.stdout }}/vault.yml"
            owner: ansible-svc
            group: ansible-svc
            mode: "0644"
            decrypt: false

    - name: Preparing for a unbundled containerized 2.5 install
      when:
        - aap_distro == '2.5containerized'
        - bundle is False
      block:

        - name: Ensure we have the 2.5 containerized AAP software
          register: download_aap_tarball
          until: download_aap_tarball is not failed
          retries: 5
          delay: 20
          ansible.builtin.get_url:
            url: https://api.access.redhat.com/management/v1/images/{{ checksum }}/download
            headers:
              accept: application/json
              Authorization: Bearer {{ access_token.json.access_token }}
            dest: ~ansible-svc/aap25c.tar.gz
            checksum: "sha256: {{ checksum }}"
            owner: ansible-svc
            group: ansible-svc
            mode: '0644'

        - name: Checking to see if we have already opened the 2.5
          register: my_test
          ansible.builtin.stat:
            path: ~ansible-svc/aap25c_was_opened

        - name: Ensure the containerized 2.5 aap is opened up
          when: my_test.stat.exists is undefined
          ansible.builtin.unarchive:
            src: ~ansible-svc/aap25c.tar.gz
            dest: ~ansible-svc/
            remote_src: true
            owner: ansible-svc
            group: ansible-svc

        - name: Create a file to let us know if we have already opened up the containerized 2.5 aap software
          when: my_test.stat.exists is undefined
          ansible.builtin.copy:
            content: ""
            dest: ~ansible-svc/aap25c_was_opened
            owner: ansible-svc
            group: ansible-svc
            mode: '0444'

        - name: Ensure we have the containerized AAP 2.5 directory
          register: aap_bundle_dir
          changed_when: false
          ansible.builtin.shell:
            cmd: |
              set -o pipefail
              ls -d ansible-automation-platform-containerized-setup-2.5-* | grep -v tar.gz
          args:
            chdir: ~ansible-svc/

        - name: Making copy of the 2.5 containerized file to the original name
          changed_when: false
          ansible.builtin.command: "cp aap25c.tar.gz {{ aap_bundle_dir.stdout }}.tar.gz"
          args:
            chdir: ~ansible-svc/

        - name: Creating the new inventory file for 2.5 containerized
          ansible.builtin.template:
            src: containerized_aap_25_inventory-growth.j2
            dest: "~ansible-svc/{{ aap_bundle_dir.stdout }}/inventory-growth"
            owner: ansible-svc
            group: ansible-svc
            mode: "0644"
            backup: true

        - name: Copy the vault file into place for the install
          ansible.builtin.copy:
            src: vault.yml
            dest: "~ansible-svc/{{ aap_bundle_dir.stdout }}/vault.yml"
            owner: ansible-svc
            group: ansible-svc
            mode: "0644"
            decrypt: false
