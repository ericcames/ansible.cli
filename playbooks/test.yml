- name: Setting up the Ansible Automation Platform install
  hosts: localhost
  connection: local
  gather_facts: true
  vars_files:
    - ../files/distributions.yml
  vars_prompt:
    - name: controller_url
      prompt: What is your server's fully qualified domain name?
      private: false

    - name: aap_distro
      prompt: "Which Ansible Automation Platform distro to use 2.4, 2.5, 2.4containerized, 2.5containerized? default: 2.5containerized"
      private: false
      default: "2.5containerized"

  tasks:

    - name: Print out the fqdn
      ansible.builtin.debug:
        msg: "{{ controller_url }}"

    - name: Print checksum
      loop: "{{ distributions }}"
      when: item['name'] == aap_distro
      ansible.builtin.debug:
        msg: "{{ item['aap_sha_value'] }}"

    - name: Print out system checks
      ansible.builtin.debug:
        msg:
          - "Total system memory: {{ ansible_memtotal_mb }} mb"
          - "Total cpu count: {{ ansible_processor_count }}"
          - "Red Hat Enterprise Linux: {{ ansible_distribution }} {{ ansible_facts['distribution_version'] }} {{ ansible_facts['userspace_architecture'] }}"
          - "Total disk space: {{ ansible_devices['nvme0n1']['partitions']['nvme0n1p4']['size'] }} gb"

    - name: Print out disk partitions
      loop: "{{ ansible_devices['nvme0n1']['partitions']['keys']() | list }}"
      # when: ansible_devices['nvme0n1']['partitions'][item]['links']['labels'] == "root"
      ansible.builtin.debug:
        msg: "{{ ansible_devices['nvme0n1']['partitions'][item]['size'] }}"

    - name: Print out disk partitions
      loop: "{{ ansible_devices['nvme0n1']['partitions']['keys']() | list }}"
      # when: ansible_devices['nvme0n1']['partitions'][item]['links']['labels'] == 'root'
      ansible.builtin.debug:
        msg: "{{ ansible_devices['nvme0n1']['partitions'][item]['links']['labels'] }}"
